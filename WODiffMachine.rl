//
// WODiffMachine.m/WODiffMachine.rl
// gdiff
//
// Created by Wincent Colaiuta on 21 September 2007.
// Copyright 2007 Wincent Colaiuta.

// --------------------------------------------------------------------------------------------------------- //
// NOTE: The file WODiffMachine.m is auto-generated by Ragel; do not edit it: edit WODiffMachine.rl instead. //
// --------------------------------------------------------------------------------------------------------- //

%%{
    machine WODiffMachine;

    # for capturing line ranges
    action clear_range_pointers         { location_pointer = length_pointer = NULL; }
    action store_location_pointer       { location_pointer = p; }
    action store_length_pointer         { length_pointer = p; }

    # for storing chunk boundaries based on captured ranges
    action store_from_range
    {
        from_file_chunk_start   = atoi(location_pointer);
        from_file_chunk_end     = length_pointer ? atoi(length_pointer) + from_file_chunk_start : from_file_chunk_start + 1;
    }

    action store_to_range
    {
        to_file_chunk_start     = atoi(location_pointer);
        to_file_chunk_end       = length_pointer ? atoi(length_pointer) + to_file_chunk_start : to_file_chunk_start + 1;
    }

    # machine order here is largely determined by Ragel (no forward references allowed)
    linefeed                  = "\n" @{ line_idx++; };
    sp                        = " " ;

    git_diff_header           = "diff --git" sp (any - linefeed)+ linefeed ;

    octal_digit               = "0".."7" ;
    mode                      = octal_digit octal_digit octal_digit octal_digit octal_digit octal_digit ;

    hex_digit                 = "0".."9" | "a".."f" ;
    hash                      = hex_digit hex_digit hex_digit hex_digit hex_digit hex_digit hex_digit ;

    # start with basic set of possible headers seen in samples
    # later support others in git.git/Documentation/diff-format.txt if necessary
    extended_header           = "deleted file mode" sp mode linefeed
                              | "new file mode" sp mode linefeed
                              | "index" sp hash ".." hash (sp mode)? linefeed ;

    dev_null                  = "/dev/null" @{ NSLog(@"/dev/null"); };

    tab_escape                = "\\t" ;
    linefeed_escape           = "\\n" ;
    quote_escape              = "\\\"" ;
    backslash_escape          = "\\\\" ;
    escape                    = tab_escape | linefeed_escape | quote_escape | backslash_escape ;

    quoted_from_filespec      = '"a/' (escape | [^"\\\n])+ '"' ;
    unquoted_from_filespec    = "a/" (any - linefeed)+ ;
    from_filespec             = quoted_from_filespec | unquoted_from_filespec | dev_null ;

    quoted_to_filespec        = '"b/' (escape | [^"\\\n])+ '"' ;
    unquoted_to_filespec      = "b/" (any - linefeed)+ ;
    to_filespec               = quoted_to_filespec | unquoted_to_filespec | dev_null ;

    from_spec                 = "---" sp from_filespec linefeed @{ NSLog(@"from_spec"); };
    to_spec                   = "+++" sp to_filespec linefeed @{ NSLog(@"to_spec"); };

    from_range                = "-" ;
    to_range                  = "+" ;
    range                     = digit+ >store_location_pointer ("," digit+ >store_length_pointer)? ;
    range_spec                = "@@" sp >clear_range_pointers
                              . from_range range %store_from_range sp
                              . to_range range %store_to_range sp "@@" (any - linefeed)* linefeed ;

    context_line              = sp (any - linefeed)* linefeed @{ NSLog(@"context line %d", line_idx); };
    deletion_line             = "-" (any - linefeed)* linefeed @{ NSLog(@"deletion %d", line_idx); };
    insertion_line            = "+" (any - linefeed)* linefeed @{ NSLog(@"insertion %d", line_idx);};
    newline_warning           = "\\ No newline at end of file" linefeed @{ NSLog(@"warning %d", line_idx);};

    chunk                     = range_spec
                              . (context_line | deletion_line | insertion_line | newline_warning )+ ;
    file_block                = git_diff_header
                              . extended_header+
                              . from_spec
                              . to_spec
                              . chunk+;
    main                      := file_block+ linefeed @{ NSLog(@"main");};

}%%

// class header
#import "WODiffMachine.h"

// project headers
#import "WOChange.h"
#import "WODiff.h"
#import "WOFile.h"

// Ragel static data
%% write data;

@implementation WODiffMachine

+ (WODiffMachine *)diffMachine
{
    return [[self alloc] init];
}

- (WODiff *)parseDiffData:(NSData *)inData
{
    int     cs;                                     // current state; initially WODiffMachine_start
    char    *p          = (char *)[inData bytes];   // data pointer
    char    *pe         = p + [inData length];      // data end pointer
    int     line_idx    = 0;
    WODiff  *diff       = [WODiff diff];
    %% write init;
    %% write exec;
    if (p != pe)                                    // did not consume all the input
        return nil;
    return diff;
}

@end
